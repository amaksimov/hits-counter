# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/node:11.4
    steps:
      - checkout

      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}

      - run:
          name: npm install
          command: npm i

      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules

      - run:
          name: Npm Audit
          command: npm audit

      - run:
          name: ESLint
          command: ./node_modules/.bin/eslint .

      - run:
          name: Run tests
          command: npm test
  deploy:
    docker:
      - image: google/cloud-sdk
    environment:
      - PROJECT_NAME: "hits-counter"
      - GOOGLE_PROJECT_ID: "hits-counter-226206"
      - GOOGLE_COMPUTE_ZONE: "us-central1-a"
      - GOOGLE_CLUSTER_NAME: "standard-cluster-1"
    steps:
      - checkout
      - run:
          name: Setup Google Cloud SDK
          command: |
            apt-get install -qq -y gettext
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      - setup_remote_docker
      - run:
          name: Docker build & push
          command: |
            docker build -t ${PROJECT_NAME} .
            docker tag ${PROJECT_NAME} eu.gcr.io/${GOOGLE_PROJECT_ID}/${PROJECT_NAME}:${CIRCLE_BUILD_NUM}
            gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://eu.gcr.io
            docker push eu.gcr.io/${GOOGLE_PROJECT_ID}/${PROJECT_NAME}:${CIRCLE_BUILD_NUM}
      - run:
          name: Deploy to Kubernetes
          command: |
            envsubst < .circleci/kube/app_update.yaml > ${HOME}/patched_app_update.yaml
            kubectl apply -f ${HOME}/patched_app_update.yaml
            kubectl rollout status deployment/${PROJECT_NAME}

workflows:
  version: 2
  build:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master

